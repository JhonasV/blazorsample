#pragma checksum "C:\Users\jhonas\Desktop\blazorsample\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "01683f73d2aaf8b1751f55e8f4bdcecd9a50e6af"
// <auto-generated/>
#pragma warning disable 1591
namespace blazorsample.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using blazorsample;
    using blazorsample.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/")]
    public class Index : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.AddMarkupContent(0, "<h1>Move it!</h1>\n\n    ");
            builder.OpenElement(1, "div");
            builder.AddAttribute(2, "class", "row row-style");
            builder.AddContent(3, "\n        ");
            builder.OpenElement(4, "div");
            builder.AddAttribute(5, "class", "col-lg-5");
            builder.AddContent(6, "\n           ");
            builder.AddMarkupContent(7, "<div class=\"title-container\"><h3>Izquierda</h3></div>           \n          ");
            builder.OpenElement(8, "div");
            builder.AddAttribute(9, "class", "item-box");
            builder.AddContent(10, "\n");
#line 9 "C:\Users\jhonas\Desktop\blazorsample\Pages\Index.cshtml"
                
                  foreach(var item in items){
                      if(item.Position == 0){
                          if(newPosition.Contains(item)){

#line default
#line hidden
            builder.AddContent(11, "                            ");
            builder.OpenElement(12, "input");
            builder.AddAttribute(13, "class", "form-control item-selected-p0");
            builder.AddAttribute(14, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>((e) => onItemClickHandler(item)));
            builder.AddAttribute(15, "id", item.Id);
            builder.AddAttribute(16, "type", "button");
            builder.AddAttribute(17, "readonly", true);
            builder.AddAttribute(18, "value", item.Name);
            builder.CloseElement();
            builder.AddContent(19, "\n");
#line 14 "C:\Users\jhonas\Desktop\blazorsample\Pages\Index.cshtml"
                          }else{

#line default
#line hidden
            builder.AddContent(20, "                            ");
            builder.OpenElement(21, "input");
            builder.AddAttribute(22, "class", "form-control item");
            builder.AddAttribute(23, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>((e) => onItemClickHandler(item)));
            builder.AddAttribute(24, "id", item.Id);
            builder.AddAttribute(25, "type", "button");
            builder.AddAttribute(26, "readonly", true);
            builder.AddAttribute(27, "value", item.Name);
            builder.CloseElement();
            builder.AddContent(28, "\n");
#line 16 "C:\Users\jhonas\Desktop\blazorsample\Pages\Index.cshtml"
                        }
                      }
                  }
              

#line default
#line hidden
            builder.AddContent(29, "          ");
            builder.CloseElement();
            builder.AddContent(30, "\n        ");
            builder.CloseElement();
            builder.AddContent(31, "\n        ");
            builder.OpenElement(32, "div");
            builder.AddAttribute(33, "class", "col-lg-2 controls");
            builder.AddContent(34, "\n            ");
            builder.OpenElement(35, "button");
            builder.AddAttribute(36, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(toRightClickHandler));
            builder.AddAttribute(37, "class", "btn btn-primary btn-lg");
            builder.AddContent(38, ">");
            builder.CloseElement();
            builder.AddContent(39, "\n            ");
            builder.OpenElement(40, "button");
            builder.AddAttribute(41, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(toLeftClickHandler));
            builder.AddAttribute(42, "class", "btn btn-primary btn-lg");
            builder.AddContent(43, "<");
            builder.CloseElement();
            builder.AddContent(44, "\n        ");
            builder.CloseElement();
            builder.AddContent(45, "\n        ");
            builder.OpenElement(46, "div");
            builder.AddAttribute(47, "class", "col-lg-5");
            builder.AddContent(48, "\n          ");
            builder.AddMarkupContent(49, "<div class=\"title-container\"><h3>Derecha</h3></div>        \n          ");
            builder.OpenElement(50, "div");
            builder.AddAttribute(51, "class", "item-box");
            builder.AddContent(52, "\n");
#line 29 "C:\Users\jhonas\Desktop\blazorsample\Pages\Index.cshtml"
                  
                  foreach(var item in items){
                      if(item.Position == 1){
                          if(newPosition.Contains(item)){

#line default
#line hidden
            builder.AddContent(53, "                            ");
            builder.OpenElement(54, "input");
            builder.AddAttribute(55, "class", "form-control item-selected-p0");
            builder.AddAttribute(56, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>((e) => onItemClickHandler(item)));
            builder.AddAttribute(57, "id", item.Id);
            builder.AddAttribute(58, "type", "button");
            builder.AddAttribute(59, "readonly", true);
            builder.AddAttribute(60, "value", item.Name);
            builder.CloseElement();
            builder.AddContent(61, "\n");
#line 34 "C:\Users\jhonas\Desktop\blazorsample\Pages\Index.cshtml"
                          }else{

#line default
#line hidden
            builder.AddContent(62, "                            ");
            builder.OpenElement(63, "input");
            builder.AddAttribute(64, "class", "form-control item");
            builder.AddAttribute(65, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>((e) => onItemClickHandler(item)));
            builder.AddAttribute(66, "id", item.Id);
            builder.AddAttribute(67, "type", "button");
            builder.AddAttribute(68, "readonly", true);
            builder.AddAttribute(69, "value", item.Name);
            builder.CloseElement();
            builder.AddContent(70, "\n");
#line 36 "C:\Users\jhonas\Desktop\blazorsample\Pages\Index.cshtml"
                        }
                      }
                  }
              

#line default
#line hidden
            builder.AddContent(71, "          ");
            builder.CloseElement();
            builder.AddContent(72, "\n        ");
            builder.CloseElement();
            builder.AddContent(73, "\n    ");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 44 "C:\Users\jhonas\Desktop\blazorsample\Pages\Index.cshtml"
            
    List<Items> items = new List<Items>();
    List<Items> newPosition = new List<Items>();
 
    
    protected override void OnInit(){
        filler();
    }
    
    void filler()
    {
        items.Add(new Items{ Id = 1, Name = "Eggs", Position = 0});
        items.Add( new Items{Id = 2, Name = "Bread", Position = 0}); 
    }
    

    void onItemClickHandler(Items e) {
        var item = newPosition.Contains(e);
        if(item) { newPosition.Remove(e);} else { newPosition.Add(e);}  
    }

    void toRightClickHandler(){
        foreach (var move in newPosition)
        {
            foreach(var move2 in items){
                if(move.Id == move2.Id && move.Position == 0){
                    move.Position = 1;
                }
            }
        }
    }
     void toLeftClickHandler(){
        foreach (var move in newPosition)
        {
            foreach(var move2 in items){
                if(move.Id == move2.Id && move.Position == 1){
                    move.Position = 0;
                }
            }
        }
    }
    class Items
    {
        public int Id { get; set; }
        public String Name { get; set; }
        public int Position { get; set; }
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
